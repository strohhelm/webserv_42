Ask explanations about the basics of an HTTP server.
    - Hyper Text Transfer Protocoll: Sending Data
Ask what function the group used for I/O Multiplexing.
    - poll function is used one thread for handling multiple file descriptors
Ask for an explanation of how does select() (or equivalent) work.
    - it checks which file descriptors are ready for i/o operations
Ask if they use only one select() (or equivalent) and how they've managed the server to accept and the client to read/write.
    - with a struct of file descriptors -> std::vector<struct pollfd> _poll_fds;
The select() (or equivalent) should be in the main loop and should check file descriptors for read and write AT THE SAME TIME. If not, the grade is 0 and the evaluation process ends now.
    - handlePolls();
There should be only one read or one write per client per select() (or equivalent). Ask the group to show you the code from the select() (or equivalent) to the read and write of a client.
    - readDataFromClient()
    - sendResponse()
Search for all read/recv/write/send on a socket and check that, if an error is returned, the client is removed.
    - âœ… needs to be removed anyway after the request is handled
Search for all read/recv/write/send and check if the returned value is correctly checked (checking only -1 or 0 values is not enough, both should be checked).
    - ðŸš« needs to be done
If errno is checked after read/recv/write/send, the grade is 0 and the evaluation process ends now.
    - âœ… is not checked
Writing or reading ANY file descriptor without going through the select() (or equivalent) is strictly FORBIDDEN.
    - âœ… is done
The project must compile without any re-link issue. If not, use the 'Invalid compilation' flag.
    - âœ…
If any point is unclear or is not correct, the evaluation stops.